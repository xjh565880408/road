<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.dao.MaintainlistMapper">
  <resultMap id="BaseResultMap" type="com.woniu.domain.Maintainlist">
    <id column="accidentId" jdbcType="INTEGER" property="accidentid" />
    <id column="materialId" jdbcType="INTEGER" property="materialid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="materialNumber" jdbcType="INTEGER" property="materialnumber" />
    <result column="totalprice" jdbcType="DOUBLE" property="totalprice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    accidentId, materialId, userId, materialNumber, totalprice
  </sql>
  <select id="selectByExample" parameterType="com.woniu.domain.MaintainlistExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from maintainlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.woniu.domain.MaintainlistKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from maintainlist
    where accidentId = #{accidentid,jdbcType=INTEGER}
      and materialId = #{materialid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.woniu.domain.MaintainlistKey">
    delete from maintainlist
    where accidentId = #{accidentid,jdbcType=INTEGER}
      and materialId = #{materialid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.domain.MaintainlistExample">
    delete from maintainlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.domain.Maintainlist">
    insert into maintainlist (accidentId, materialId, userId, 
      materialNumber, totalprice)
    values (#{accidentid,jdbcType=INTEGER}, #{materialid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{materialnumber,jdbcType=INTEGER}, #{totalprice,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.domain.Maintainlist">
    insert into maintainlist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accidentid != null">
        accidentId,
      </if>
      <if test="materialid != null">
        materialId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="materialnumber != null">
        materialNumber,
      </if>
      <if test="totalprice != null">
        totalprice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accidentid != null">
        #{accidentid,jdbcType=INTEGER},
      </if>
      <if test="materialid != null">
        #{materialid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="materialnumber != null">
        #{materialnumber,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.domain.MaintainlistExample" resultType="java.lang.Long">
    select count(*) from maintainlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update maintainlist
    <set>
      <if test="record.accidentid != null">
        accidentId = #{record.accidentid,jdbcType=INTEGER},
      </if>
      <if test="record.materialid != null">
        materialId = #{record.materialid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.materialnumber != null">
        materialNumber = #{record.materialnumber,jdbcType=INTEGER},
      </if>
      <if test="record.totalprice != null">
        totalprice = #{record.totalprice,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update maintainlist
    set accidentId = #{record.accidentid,jdbcType=INTEGER},
      materialId = #{record.materialid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      materialNumber = #{record.materialnumber,jdbcType=INTEGER},
      totalprice = #{record.totalprice,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.domain.Maintainlist">
    update maintainlist
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="materialnumber != null">
        materialNumber = #{materialnumber,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null">
        totalprice = #{totalprice,jdbcType=DOUBLE},
      </if>
    </set>
    where accidentId = #{accidentid,jdbcType=INTEGER}
      and materialId = #{materialid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.domain.Maintainlist">
    update maintainlist
    set userId = #{userid,jdbcType=INTEGER},
      materialNumber = #{materialnumber,jdbcType=INTEGER},
      totalprice = #{totalprice,jdbcType=DOUBLE}
    where accidentId = #{accidentid,jdbcType=INTEGER}
      and materialId = #{materialid,jdbcType=INTEGER}
  </update>
</mapper>