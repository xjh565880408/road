<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.dao.RoadStructureMapper">
  <resultMap id="BaseResultMap" type="com.woniu.domain.RoadStructure">
    <id column="conid" jdbcType="INTEGER" property="conid" />
    <result column="roadId" jdbcType="INTEGER" property="roadid" />
    <result column="baseId" jdbcType="INTEGER" property="baseid" />
    <result column="birdgeId" jdbcType="INTEGER" property="birdgeid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    conid, roadId, baseId, birdgeId
  </sql>
  <select id="selectByExample" parameterType="com.woniu.domain.RoadStructureExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from road_structure
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from road_structure
    where conid = #{conid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from road_structure
    where conid = #{conid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.domain.RoadStructureExample">
    delete from road_structure
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.domain.RoadStructure">
    insert into road_structure (conid, roadId, baseId, 
      birdgeId)
    values (#{conid,jdbcType=INTEGER}, #{roadid,jdbcType=INTEGER}, #{baseid,jdbcType=INTEGER}, 
      #{birdgeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.domain.RoadStructure">
    insert into road_structure
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="conid != null">
        conid,
      </if>
      <if test="roadid != null">
        roadId,
      </if>
      <if test="baseid != null">
        baseId,
      </if>
      <if test="birdgeid != null">
        birdgeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="conid != null">
        #{conid,jdbcType=INTEGER},
      </if>
      <if test="roadid != null">
        #{roadid,jdbcType=INTEGER},
      </if>
      <if test="baseid != null">
        #{baseid,jdbcType=INTEGER},
      </if>
      <if test="birdgeid != null">
        #{birdgeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.domain.RoadStructureExample" resultType="java.lang.Long">
    select count(*) from road_structure
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update road_structure
    <set>
      <if test="record.conid != null">
        conid = #{record.conid,jdbcType=INTEGER},
      </if>
      <if test="record.roadid != null">
        roadId = #{record.roadid,jdbcType=INTEGER},
      </if>
      <if test="record.baseid != null">
        baseId = #{record.baseid,jdbcType=INTEGER},
      </if>
      <if test="record.birdgeid != null">
        birdgeId = #{record.birdgeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update road_structure
    set conid = #{record.conid,jdbcType=INTEGER},
      roadId = #{record.roadid,jdbcType=INTEGER},
      baseId = #{record.baseid,jdbcType=INTEGER},
      birdgeId = #{record.birdgeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.domain.RoadStructure">
    update road_structure
    <set>
      <if test="roadid != null">
        roadId = #{roadid,jdbcType=INTEGER},
      </if>
      <if test="baseid != null">
        baseId = #{baseid,jdbcType=INTEGER},
      </if>
      <if test="birdgeid != null">
        birdgeId = #{birdgeid,jdbcType=INTEGER},
      </if>
    </set>
    where conid = #{conid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.domain.RoadStructure">
    update road_structure
    set roadId = #{roadid,jdbcType=INTEGER},
      baseId = #{baseid,jdbcType=INTEGER},
      birdgeId = #{birdgeid,jdbcType=INTEGER}
    where conid = #{conid,jdbcType=INTEGER}
  </update>
</mapper>